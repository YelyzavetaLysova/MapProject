@using MapProject.Web.Models;
@using MapProject.Web.Components;

@model RenderMapModel


@{
    ViewBag.Title = "MapProject - " + Model.Map.Name;
    Layout = "~/Views/Shared/_Layout.cshtml";
}




@{
    string currentDataSet = Model.DataSet == null ? "Data set is not loaded" : Model.DataSet.Key;
    bool dataSetNull = this.Model.DataSet == null;
    string dataSetId = Model.DataSet == null ? String.Empty : Model.DataSet.Key;


    int maxX = Model.Map.Regions.Max(x => x.Points.Max(y => y.X));
    int maxY = Model.Map.Regions.Max(x => x.Points.Max(y => y.Y));
}



<div class="container-fluid">

    <div id="currentMapName" hidden>@Model.Map.Name</div>
    <div id="currentDataSet" hidden>@dataSetId</div>
    <div id="currentRegionId" hidden></div>

    <div class="row">

        <nav id="sidebarMenu" class="col-3 d-md-block bg-light sidebar collapse">
            <div class="sidebar-sticky pt-3">

                <div class="alert alert-primary">Current map - <b>@Model.Map.Name</b></div>

                <div>

                    @{
                        if (!String.IsNullOrEmpty(Model.DataSetName))
                        {
                            <div class="alert alert-primary">Current dataset - <b>@Model.DataSetName</b></div>

                            <a class="btn btn-sm btn-primary" href="/Map/CloseDataSet?mapName=@Model.MapName">Close dataset</a>
                            <a class="btn btn-sm btn-danger" href="/Map/DeleteDataSet?mapName=@Model.MapName&dataSetName=@Model.DataSetName">Delete dataset</a>
                        }
                        else
                        {

                            <div class="alert alert-warning">Dataset is not loaded. Please load or create dataset to see or edit the data associated with the regions</div>

                            <div class="row">
                                <div class="col-6">
                                    <h5>Load dataset</h5>
                                    <form id="createNewDataSetForm" asp-controller="Map" asp-action="LoadDataSet" method="post">

                                        <div class="form-group">

                                            <select class="form-control" name="dataSetName">
                                                @{
                                                    foreach (var dataSet in Model.DataSetNames)
                                                    {

                                                        <option>@dataSet</option>
                                                    }
                                                }
                                            </select>

                                            <input class="form-control" type="text" name="mapName" value="@Model.MapName" hidden />

                                        </div>

                                        <button class="btn btn-primary btn-sm" type="submit"> Load </button>

                                    </form>
                                </div>
                                <div class="col-6">
                                    <h5>Create new dataset</h5>
                                    <form id="createNewDataSetForm" asp-controller="Map" asp-action="CreateDataSet" method="post">

                                        <div class="form-group">

                                            <input class="form-control" type="text" name="dataSetName" placeholder="New dataset name here" />
                                            <input class="form-control" type="text" name="mapName" value="@Model.MapName" hidden />
                                        </div>

                                        <button class="btn btn-primary btn-sm" type="submit">Create</button>

                                    </form>
                                </div>
                            </div>

                        }
                    }



                </div>

                <p></p>

                <div id="regionManagement">

                       @await Component.InvokeAsync(ManageRegionViewComponent.Name, Model)

                </div>

            </div>
        </nav>
    </div>


    <main class="main-rendermap">
        
        <div class="row">

            <div class="col-3"></div>
            <div class="col-9">

                <div class="svg-ct">

                    @*<svg height="300px" width="300px">*@

                    <svg height="@maxY" width="@maxX">
                        @{

                            foreach (var region in Model.Map.Regions)
                            {

                                <g>
                                    @{

                                        string points = String.Empty;
                                    }

                                    @for (int i = 0; i < region.Points.Count; i++)
                                    {

                                        var point = region.Points[i];

                                        points += point.X + "," + point.Y + " ";
                                    }

                                    @{
                                        string fill = "white";
                                        double opacity = 1;

                                        if (Model.StatisticColorItems != null)
                                        {
                                            var statisticColorItem = Model.StatisticColorItems.FirstOrDefault(x => x.RegionId == region.Id);

                                            if (statisticColorItem != null)
                                            {
                                                fill = statisticColorItem.Color.ToString().Replace("24", String.Empty);
                                                opacity = statisticColorItem.Opacity;
                                            }
                                        }

                                    }

                                    <polygon id="@region.Id" points="@points.Remove(points.Length - 1)" fill="@fill" opacity="@opacity" stroke="black" onclick="regionOnClickHandler(this.id)" />

                                </g>
                            }


                        }
                    </svg>

                </div>

            </div>

        </div>

       
    </main>


</div>

<script src="~/js/mapProject.js"></script>



